name: Deploy

on:
  workflow_call:
    inputs:
      application:
        type: string
        required: false
      environment:
        type: string
        required: true
      tf_environment:
        type: string
        required: false
      flyway_script_locations:
        type: string
        required: false
      slot-name:
        type: string
        required: false
        default: production

jobs:
  terraform:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Apply Terraform configuration
        uses: kgknutsson/github-actions/gitops-apply-terraform@v3
        with:
          client_id: ${{ secrets.CLIENT_ID }}
          subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
          tenant_id: ${{ secrets.TENANT_ID }}
          tf_storage_account: ${{ secrets.TF_STORAGE_ACCOUNT }}
          environment: ${{ inputs.tf_environment != '' && inputs.tf_environment || inputs.environment }}

  deploy:
    needs: [terraform]
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
    steps:
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.CLIENT_ID }}
          tenant-id: ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}
      - name: Download Terraform output data
        uses: actions/download-artifact@v4
        with:
          name: terraform-output
      - name: Set environment variables
        run: |
          echo "APPLICATION_CAF_NAME=$(cat terraform-output.json | jq -r '.application_caf_name.value | select(. != null)')" >> $GITHUB_ENV
          echo "FUNCTION_CAF_NAME=$(cat terraform-output.json | jq -r '.function_caf_name.value | select(. != null)')" >> $GITHUB_ENV
      - name: Download application package
        if: env.APPLICATION_CAF_NAME != ''
        uses: actions/download-artifact@v4
        with:
          name: package
          path: app-package
      - name: Deploy to Azure App Service
        if: env.APPLICATION_CAF_NAME != ''
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.APPLICATION_CAF_NAME }}
          slot-name: ${{ inputs.slot-name }}
          package: 'app-package/*.[j,w]ar'
      - name: Download function package
        if: env.FUNCTION_CAF_NAME != ''
        uses: actions/download-artifact@v4
        with:
          name: function-package
          path: function-package
      - name: Deploy to Azure Function
        if: env.FUNCTION_CAF_NAME != ''
        uses: azure/functions-action@v1
        with:
          app-name: ${{ env.FUNCTION_CAF_NAME }}
          package: function-package
  
  flyway:
    needs: [terraform]
    if: inputs.flyway_script_locations != ''
    runs-on: self-hosted
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download Terraform output data
        uses: actions/download-artifact@v4
        with:
          name: terraform-output
      - name: Set environment variables
        run: echo "FLYWAY_URL=$(cat terraform-output.json | jq -r .database_jdbc_string.value)" >> $GITHUB_ENV
      - name: Run flyway migrate
        uses: docker://flyway/flyway:9.19
        env:
          FLYWAY_LOCATIONS: 'filesystem:./${{ inputs.flyway_script_locations }}'
        with:
          args: migrate
  